---
import Header from "./home/Header.astro";
import HomeIcon from "../assets/icons/HomeIcon.astro";
import ProfileIcon from "../assets/icons/ProfileIcon.astro";
import BookmarkIcon from "../assets/icons/BookmarkIcon.astro";

export interface Props {
    title?: string;
}

const { title = "Whisp" } = Astro.props;
const path = Astro.url.pathname;

const links = [
    {
        href: "/",
        Icon: HomeIcon,
        text: "Home",
    },
    {
        href: "/bookmarks",
        Icon: BookmarkIcon,
        text: "Bookmarks",
    },
    {
        href: "/profile",
        Icon: ProfileIcon,
        text: "Profile",
    },
];
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <slot name="head" />
        <title>{title}</title>
    </head>
    <body class="bg-black">
        <div class="container mx-auto !max-w-7xl h-screen">
            <aside
                class="flex flex-col pr-4 gap-4 border-r border-gray-400/20 h-screen"
            >
                <a href="/" class="px-6 py-3 text-2xl font-bold">
                    <strong>WHISP</strong>
                </a>

                {
                    links.map(({ href, Icon, text }) => (
                        <a href={href} class={path === href ? "active" : ""}>
                            <Icon />
                            <p>{text}</p>
                        </a>
                    ))
                }
                {
                    path !== "/create" && (
                        <a
                            href="/create"
                            class="max-w-full py-3 justify-center bg-primary hover:bg-primary-dark"
                        >
                            Whisper
                        </a>
                    )
                }
            </aside>
            <header class="px-4 py-2">
                <slot name="header">
                    <Header />
                </slot>
            </header>
            <main class="pl-4 h-full overflow-y-auto">
                <slot />
            </main>
        </div>
    </body>
</html>

<style lang="postcss">

    :global(:root) {
        color-scheme: dark light;
    }

    .container {
        display: grid;
        grid-template-columns: 1.3fr 4fr 1fr;
        grid-template-rows: auto 1fr;
        grid-template-areas:
            "sidebar header"
            "sidebar main";
    }

    aside {
        grid-area: sidebar;
    }

    aside a {
        @apply max-w-max flex gap-4 text-lg items-center px-6 rounded-full py-4 hover:bg-gray-50/20 transition-colors;
    }

    aside a.active {
        @apply text-primary;
    }
    
    aside a :global(svg) {
        @apply transition-all;
    }
    
    aside a:hover :global(svg) {
        @apply text-primary scale-125;
    }

    div header {
        grid-area: header;
    }

    main {
        grid-area: main;
    }
</style>
